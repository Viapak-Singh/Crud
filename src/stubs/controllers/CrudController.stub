<?php

namespace {{namespace}}Http\Controllers;

use App\Http\Controllers\Controller;

use Illuminate\Http\Request;
use {{namespace}}Models\Record;
use Yajra\DataTables\Facades\DataTables;

class CrudController extends Controller
{
    public function index()
    {
        
        if(request()->ajax()) {
            $records = Record::select('id', 'name', 'email');
            return DataTables::of($records)    
            ->addColumn(
                'action',
                function ($row) {
                    return view('components.action_buttons', [
                        'can_update' => true,
                        'editBtnClass' => 'edit_record btn-edit',
                        'data_id' => $row->id,
                        'can_delete' => true,
                        'deleteBtnClass' => 'delete_record btn-delete'
                    ]);
                }
            )  
            ->rawColumns(['action'])
            ->make(true);
        }

        return view('crud.index');
    }

    public function create()
    {
        return view('crud.create');
    }

    public function store(Request $request)
    {
        $input = $request->only('name', 'email');
        Record::create($input);
        return redirect()->route('index');
    }

    public function edit($id)
    {
        $record = Record::find($id);
        return view('crud.edit')->with(compact('record'));
    }

    public function update($id)
    {
        try {
            $input = request()->only('name', 'email');
            $record = Record::find($id);
            if($record) {
                $record->update($input);
                $output = [
                    'success' => true,
                    'msg' => 'Record successfully updated'
                ];
            } else {
                $output = [
                    'success' => false,
                    'msg' => 'Something went wrong'
                ];
            }
        } catch (\Exception $e) {
            $output = [
                'success' => false,
                'msg' => $e->getMessage()
            ];
        }

        return $output;
    }

    public function destroy($id) {
        try {
            $record = Record::find($id);
            if($record) {
                $record->delete();
                $output = [
                    'success' => true,
                    'msg' => 'Record successfully deleted'
                ];
            } else {
                $output = [
                    'success' => false,
                    'msg' => 'Something went wrong'
                ];
            }
        } catch (\Exception $e) {
            $output = [
                'success' => false,
                'msg' => $e->getMessage()
            ];
        }

        return $output;
    }
}
